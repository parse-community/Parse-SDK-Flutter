name: ci
on:
  push:
    branches:
      - "master"
      - "development"
    paths-ignore:
      - "**/README.md"
      - "docs/**"
  pull_request:
    branches:
      - "**"
jobs:
  check-lint-dart:
    name: Lint (Dart)
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup dart
        uses: dart-lang/setup-dart@v1
      - name: Lint
        run: dart format --output=none --set-exit-if-changed packages/dart
  check-lint-flutter:
    name: Lint (Flutter)
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
      - name: Lint
        run: dart format --output=none --set-exit-if-changed packages/flutter
  check-publish-dry-run-dart:
    name: Publish dry-run (Dart)
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup dart
        uses: dart-lang/setup-dart@v1
      - name: publish dry run
        run: cd packages/dart && dart pub publish --dry-run
  check-publish-dry-run-flutter:
    name: Publish dry-run (Flutter)
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
      - name: publish dry run
        run: cd packages/flutter && dart pub publish --dry-run
  check-dart:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Dart SDK may contain breaking changes in minor version releases, i.e. it doesn't
          # follow semver, see 
          - name: Dart 3.0, Ubuntu
            os: ubuntu-latest
            sdk: 3.0.0
          - name: Dart 3.0, macOS
            os: macos-latest
            sdk: 3.0.0
          - name: Dart 3.0, Windows
            os: windows-latest
            sdk: 3.0.0
          # Only the latest Dart SDK version (above) is tested with all architectures. Previous
          # Dart SDK versions (below) are only tested with Ubuntu to reduce CI resource usage.
          - name: Dart 2.19
            os: ubuntu-latest
            sdk: 2.19.6
          - name: Dart 2.18
            os: ubuntu-latest
            sdk: 2.18.7
          - name: Dart 2.17
            os: ubuntu-latest
            sdk: 2.17.7
          - name: Dart 2.16
            os: ubuntu-latest
            sdk: 2.16.2
          - name: Dart 2.15
            os: ubuntu-latest
            sdk: 2.15.1
          - name: Dart 2.14
            os: ubuntu-latest
            sdk: 2.14.4
          - name: Dart 2.13
            os: ubuntu-latest
            sdk: 2.13.4
          - name: Dart 2.12
            os: ubuntu-latest
            sdk: 2.12.4
      fail-fast: false
    name: Test ${{ matrix.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup dart
        uses: dart-lang/setup-dart@v1.5.0
        with:
          sdk: ${{ matrix.sdk }}
      - name: Install dependencies
        run: dart pub get --directory packages/dart
      - name: Run build_runner
        run: (cd packages/dart && dart run build_runner build --delete-conflicting-outputs)
      - name: Analyze code
        run: dart analyze packages/dart
      - name: Run tests
        run: (cd packages/dart && dart test --coverage=coverage)
      - name: Convert code coverage
        # Needs to be adapted to collect the coverage at all platforms if platform specific code is added.
        if: ${{ always() && matrix.os == 'ubuntu-latest' }}
        working-directory: packages/dart
        run: |
          dart pub global activate coverage
          dart pub global run coverage:format_coverage -i coverage/test -o coverage/lcov.info --lcov --packages=.dart_tool/package_config.json --report-on=lib
      - name: Upload code coverage
        uses: codecov/codecov-action@v2
        # Needs to be adapted to collect the coverage at all platforms if platform specific code is added.
        if: ${{ always() && matrix.os == 'ubuntu-latest' }}
        with:
          files: packages/dart/coverage/lcov.info
          fail_ci_if_error: true
  check-flutter:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Dart SDK may contain breaking changes in minor version releases, i.e. it doesn't
          # follow semver, see 
          - name: Flutter 3.10, Ubuntu
            os: ubuntu-latest
            sdk: 3.10.x
          - name: Flutter 3.10, macOS
            os: macos-latest
            sdk: 3.10.x
          - name: Flutter 3.10, Windows
            os: windows-latest
            sdk: 3.10.x
          # Only the latest Flutter SDK version (above) is tested with all architectures. Previous
          # Flutter SDK versions (below) are only tested with Ubuntu to reduce CI resource usage.
          - name: Flutter 3.7
            os: ubuntu-latest
            sdk: 3.7.x
          - name: Flutter 3.3
            os: ubuntu-latest
            sdk: 3.3.x
      fail-fast: false
    name: Test ${{ matrix.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.sdk }}
          cache: true
      - name: Install dependencies on Ubuntu and MacOS
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          (cd packages/dart && flutter pub get)
          (cd packages/flutter && flutter pub get)
      - name: Install dependencies on Windows
        if: matrix.os == 'windows-latest'
        run: |
          cmd /c "cd packages\dart && flutter pub get"
          cmd /c "cd packages\flutter && flutter pub get"
      - name: Analyze code
        run: flutter analyze packages/flutter --no-fatal-infos
      - name: Run tests
        run: (cd packages/flutter && flutter test --coverage)
      - name: Convert code coverage
        # Needs to be adapted to collect the coverage at all platforms if platform specific code is added.
        if: ${{ always() && matrix.os == 'ubuntu-latest' }}
        working-directory: packages/flutter
        run: |
          escapedPath="$(echo `pwd` | sed 's/\//\\\//g')"
          sed "s/^SF:lib/SF:$escapedPath\/lib/g" coverage/lcov.info > coverage/lcov-full.info
      - name: Upload code coverage
        uses: codecov/codecov-action@v2
        # Needs to be adapted to collect the coverage at all platforms if platform specific code is added.
        if: ${{ always() && matrix.os == 'ubuntu-latest' }}
        with:
          files: packages/flutter/coverage/lcov-full.info
          fail_ci_if_error: true
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
