name: ci
on:
  push:
    branches:
      - "master"
      - "development"
    paths-ignore:
      - "**/README.md"
      - "docs/**"
  pull_request:
    branches:
      - "**"
jobs:
  check-lint-flutter:
    name: Lint (flutter)
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
      - name: Lint
        run: flutter format --output=none --set-exit-if-changed packages/flutter
  check-lint-dart:
    name: Lint (dart)
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup dart
        uses: dart-lang/setup-dart@v1
      - name: Lint
        run: dart format --output=none --set-exit-if-changed packages/dart
  check-code-analysis-flutter:
    name: Code analysis (flutter)
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
      - name: Install dependencies
        run: |
          echo "publish_to: none" >> packages/flutter/pubspec.yaml
          tools/flutter-dependencies.sh
      - name: Analyze code
        run: flutter analyze packages/flutter --no-fatal-infos
  check-code-analysis-dart:
    name: Code analysis (dart)
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup dart
        uses: dart-lang/setup-dart@v1
      - name: Install dependencies
        run: dart pub get --directory packages/dart
      - name: Analyze code
        run: dart analyze packages/dart
  check-flutter:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    name: Test flutter (${{ matrix.os }})
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
      - name: Install dependencies
        run: tools/flutter-dependencies.sh
      - name: Run tests
        run: (cd packages/flutter && flutter test)
  check-dart:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    name: Test dart (${{ matrix.os }})
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup dart
        uses: dart-lang/setup-dart@v1
      - name: Install dependencies
        run: dart pub get --directory packages/dart
      - name: Run build_runner
        run: (cd packages/dart && dart run build_runner build --delete-conflicting-outputs)
      - name: Run tests
        run: (cd packages/dart && dart test)
  coverage:
    runs-on: ubuntu-latest
    needs:
      - check-dart
      - check-flutter
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
      - name: Install dependencies
        run: tools/flutter-dependencies.sh
      - name: Create code coverage
        run: |
          (cd packages/dart && 
            flutter test --no-pub --coverage &&
            escapedPath="$(echo `pwd` | sed 's/\//\\\//g')"
            sed "s/^SF:lib/SF:$escapedPath\/lib/g" coverage/lcov.info >> "../../lcov.info")
          (cd packages/flutter && flutter test --no-pub --coverage &&
            escapedPath="$(echo `pwd` | sed 's/\//\\\//g')"
            sed "s/^SF:lib/SF:$escapedPath\/lib/g" coverage/lcov.info >> "../../lcov.info")
      - name: Upload code coverage
        uses: codecov/codecov-action@v2
        with:
          files: ./lcov.info
          fail_ci_if_error: true
          verbose: true
