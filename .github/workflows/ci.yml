name: ci
on:
  push:
    branches:
      - "master"
      - "development"
    paths-ignore:
      - "**/README.md"
  pull_request:
    branches:
      - "**"
jobs:
  check-lint-dart:
    name: Lint (dart)
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup dart
        uses: dart-lang/setup-dart@v1.4
      - name: Lint
        run: dart format --output=none --set-exit-if-changed ./
  check-code-analysis-dart:
    name: Code analysis (dart)
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup dart
        uses: dart-lang/setup-dart@v1.4
      - name: Install dependencies
        run: dart pub get
      - name: Analyze code
        run: dart analyze
  check-publish-dry-run-dart:
    name: publish dry-run (dart)
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup dart
        uses: dart-lang/setup-dart@v1.4
      - name: publish dry run
        run: dart pub publish --dry-run
  check-dart:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    name: Test dart (${{ matrix.os }})
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup dart
        uses: dart-lang/setup-dart@v1.4
      - name: Install dependencies
        run: dart pub get
      - name: Run build_runner
        run: dart run build_runner build --delete-conflicting-outputs
      - name: Run tests
        run: dart test --coverage=./coverage --concurrency=4 --test-randomize-ordering-seed random
      - name: Convert code coverage
        # Needs to be adapted to collect the coverage at all platforms if platform specific code is added.
        if: ${{ always() && matrix.os == 'ubuntu-latest' }}
        run: |
          dart pub global activate coverage
          dart pub global run coverage:format_coverage --packages=.dart_tool/package_config.json --report-on=lib --lcov -o ./coverage/lcov.info -i ./coverage
      - name: Upload code coverage
        uses: codecov/codecov-action@v3.1.1
        # Needs to be adapted to collect the coverage at all platforms if platform specific code is added.
        if: ${{ always() && matrix.os == 'ubuntu-latest' }}
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: true
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
