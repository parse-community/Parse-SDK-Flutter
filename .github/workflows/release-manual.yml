# Trigger this workflow only to manually create a dart/flutter release; this should only be used
# in extraordinary circumstances, as dart/flutter releases are normally created automatically as
# part of the automated release workflow.

name: release-manual
on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Reference tag (dart-#.#.# or flutter-#.#.#):'
        required: true
        default: ''
env:
  package: ${{ startsWith(github.event.ref, 'dart') && 'dart' || 'flutter' }}
jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write # This is required for requesting the JWT
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.ref }}
      - name: Setup dart
        # if: env.package == 'dart'
        uses: dart-lang/setup-dart@v1
      - name: Setup flutter
        if: env.package == 'flutter'
        uses: subosito/flutter-action@v2
        with:
          channel: 'beta'
          cache: true
      - name: Install dart dependencies
        run: dart pub get --directory 'packages/dart'
      - name: Install flutter dependencies
        if: env.package == 'flutter'
        run: dart pub get --directory 'packages/flutter'
      - name: Analyze dart
        if: env.package == 'dart'
        run: dart analyze --fatal-infos 'packages/${{ env.package }}'
      - name: Analyze flutter
        if: env.package == 'flutter'
        run: flutter analyze --fatal-infos 'packages/${{ env.package }}'
      - name: Lint
        run: dart format --output=none --set-exit-if-changed 'packages/${{ env.package }}'
      - name: Publish package (dry-run)
        working-directory: 'packages/${{ env.package }}'
        run: dart pub publish --dry-run
      - name: Publish package
        working-directory: 'packages/${{ env.package }}'
        run: dart pub publish --force
